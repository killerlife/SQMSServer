/* soapSystemManagementBinding_USCOREv1_USCORE0Proxy.h
   Generated by gSOAP 2.8.21 from cp850.h

Copyright(C) 2000-2014, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapSystemManagementBinding_USCOREv1_USCORE0Proxy_H
#define soapSystemManagementBinding_USCOREv1_USCORE0Proxy_H
#include "soapH.h"

class SOAP_CMAC SystemManagementBinding_USCOREv1_USCORE0Proxy : public soap
{ public:
	/// Endpoint URL of service 'SystemManagementBinding_USCOREv1_USCORE0Proxy' (change as needed)
	const char *soap_endpoint;
	/// Variables globally declared in cp850.h (non-static)
	/// Constructor
	SystemManagementBinding_USCOREv1_USCORE0Proxy();
	/// Construct from another engine state
	SystemManagementBinding_USCOREv1_USCORE0Proxy(const struct soap&);
	/// Constructor with endpoint URL
	SystemManagementBinding_USCOREv1_USCORE0Proxy(const char *url);
	/// Constructor with engine input+output mode control
	SystemManagementBinding_USCOREv1_USCORE0Proxy(soap_mode iomode);
	/// Constructor with URL and input+output mode control
	SystemManagementBinding_USCOREv1_USCORE0Proxy(const char *url, soap_mode iomode);
	/// Constructor with engine input and output mode control
	SystemManagementBinding_USCOREv1_USCORE0Proxy(soap_mode imode, soap_mode omode);
	/// Destructor frees deserialized data
	virtual	~SystemManagementBinding_USCOREv1_USCORE0Proxy();
	/// Initializer used by constructors
	virtual	void SystemManagementBinding_USCOREv1_USCORE0Proxy_init(soap_mode imode, soap_mode omode);
	/// Delete all deserialized data (with soap_destroy and soap_end)
	virtual	void destroy();
	/// Delete all deserialized data and reset to default
	virtual	void reset();
	/// Disables and removes SOAP Header from message
	virtual	void soap_noheader();
	/// Get SOAP Header structure (NULL when absent)
	virtual	const SOAP_ENV__Header *soap_header();
	/// Get SOAP Fault structure (NULL when absent)
	virtual	const SOAP_ENV__Fault *soap_fault();
	/// Get SOAP Fault string (NULL when absent)
	virtual	const char *soap_fault_string();
	/// Get SOAP Fault detail as string (NULL when absent)
	virtual	const char *soap_fault_detail();
	/// Close connection (normally automatic, except for send_X ops)
	virtual	int soap_close_socket();
	/// Force close connection (can kill a thread blocked on IO)
	virtual	int soap_force_close_socket();
	/// Print fault
	virtual	void soap_print_fault(FILE*);
#ifndef WITH_LEAN
	/// Print fault to stream
#ifndef WITH_COMPAT
	virtual	void soap_stream_fault(std::ostream&);
#endif

	/// Put fault into buffer
	virtual	char *soap_sprint_fault(char *buf, size_t len);
#endif

	/// Web service operation 'listMacros' (returns error code or SOAP_OK)
	virtual	int listMacros(_ns3__listMacrosRequest *ns3__listMacrosRequest, _ns3__listMacrosResponse &ns3__listMacrosResponse) { return this->listMacros(NULL, NULL, ns3__listMacrosRequest, ns3__listMacrosResponse); }
	virtual	int listMacros(const char *endpoint, const char *soap_action, _ns3__listMacrosRequest *ns3__listMacrosRequest, _ns3__listMacrosResponse &ns3__listMacrosResponse);

	/// Web service operation 'getCurrentMacro' (returns error code or SOAP_OK)
	virtual	int getCurrentMacro(_ns3__getCurrentMacroRequest *ns3__getCurrentMacroRequest, _ns3__getCurrentMacroResponse &ns3__getCurrentMacroResponse) { return this->getCurrentMacro(NULL, NULL, ns3__getCurrentMacroRequest, ns3__getCurrentMacroResponse); }
	virtual	int getCurrentMacro(const char *endpoint, const char *soap_action, _ns3__getCurrentMacroRequest *ns3__getCurrentMacroRequest, _ns3__getCurrentMacroResponse &ns3__getCurrentMacroResponse);

	/// Web service operation 'setCurrentMacro' (returns error code or SOAP_OK)
	virtual	int setCurrentMacro(_ns3__setCurrentMacroRequest *ns3__setCurrentMacroRequest, _ns3__setCurrentMacroResponse &ns3__setCurrentMacroResponse) { return this->setCurrentMacro(NULL, NULL, ns3__setCurrentMacroRequest, ns3__setCurrentMacroResponse); }
	virtual	int setCurrentMacro(const char *endpoint, const char *soap_action, _ns3__setCurrentMacroRequest *ns3__setCurrentMacroRequest, _ns3__setCurrentMacroResponse &ns3__setCurrentMacroResponse);

	/// Web service operation 'getGain' (returns error code or SOAP_OK)
	virtual	int getGain(_ns3__getGainRequest *ns3__getGainRequest, _ns3__getGainResponse &ns3__getGainResponse) { return this->getGain(NULL, NULL, ns3__getGainRequest, ns3__getGainResponse); }
	virtual	int getGain(const char *endpoint, const char *soap_action, _ns3__getGainRequest *ns3__getGainRequest, _ns3__getGainResponse &ns3__getGainResponse);

	/// Web service operation 'setGain' (returns error code or SOAP_OK)
	virtual	int setGain(_ns3__setGainRequest *ns3__setGainRequest, _ns3__setGainResponse &ns3__setGainResponse) { return this->setGain(NULL, NULL, ns3__setGainRequest, ns3__setGainResponse); }
	virtual	int setGain(const char *endpoint, const char *soap_action, _ns3__setGainRequest *ns3__setGainRequest, _ns3__setGainResponse &ns3__setGainResponse);

	/// Web service operation 'getMute' (returns error code or SOAP_OK)
	virtual	int getMute(_ns3__getMuteRequest *ns3__getMuteRequest, _ns3__getMuteResponse &ns3__getMuteResponse) { return this->getMute(NULL, NULL, ns3__getMuteRequest, ns3__getMuteResponse); }
	virtual	int getMute(const char *endpoint, const char *soap_action, _ns3__getMuteRequest *ns3__getMuteRequest, _ns3__getMuteResponse &ns3__getMuteResponse);

	/// Web service operation 'setMute' (returns error code or SOAP_OK)
	virtual	int setMute(_ns3__setMuteRequest *ns3__setMuteRequest, _ns3__setMuteResponse &ns3__setMuteResponse) { return this->setMute(NULL, NULL, ns3__setMuteRequest, ns3__setMuteResponse); }
	virtual	int setMute(const char *endpoint, const char *soap_action, _ns3__setMuteRequest *ns3__setMuteRequest, _ns3__setMuteResponse &ns3__setMuteResponse);

	/// Web service operation 'isAtmosContent' (returns error code or SOAP_OK)
	virtual	int isAtmosContent(_ns3__isAtmosContentRequest *ns3__isAtmosContentRequest, _ns3__isAtmosContentResponse &ns3__isAtmosContentResponse) { return this->isAtmosContent(NULL, NULL, ns3__isAtmosContentRequest, ns3__isAtmosContentResponse); }
	virtual	int isAtmosContent(const char *endpoint, const char *soap_action, _ns3__isAtmosContentRequest *ns3__isAtmosContentRequest, _ns3__isAtmosContentResponse &ns3__isAtmosContentResponse);

	/// Web service operation 'getAudioStreamInfo' (returns error code or SOAP_OK)
	virtual	int getAudioStreamInfo(_ns3__getAudioStreamInfoRequest *ns3__getAudioStreamInfoRequest, _ns3__getAudioStreamInfoResponse &ns3__getAudioStreamInfoResponse) { return this->getAudioStreamInfo(NULL, NULL, ns3__getAudioStreamInfoRequest, ns3__getAudioStreamInfoResponse); }
	virtual	int getAudioStreamInfo(const char *endpoint, const char *soap_action, _ns3__getAudioStreamInfoRequest *ns3__getAudioStreamInfoRequest, _ns3__getAudioStreamInfoResponse &ns3__getAudioStreamInfoResponse);

	/// Web service operation 'getAtmosConfigInfo' (returns error code or SOAP_OK)
	virtual	int getAtmosConfigInfo(_ns3__getAtmosConfigInfoRequest *ns3__getAtmosConfigInfoRequest, _ns3__getAtmosConfigInfoResponse &ns3__getAtmosConfigInfoResponse) { return this->getAtmosConfigInfo(NULL, NULL, ns3__getAtmosConfigInfoRequest, ns3__getAtmosConfigInfoResponse); }
	virtual	int getAtmosConfigInfo(const char *endpoint, const char *soap_action, _ns3__getAtmosConfigInfoRequest *ns3__getAtmosConfigInfoRequest, _ns3__getAtmosConfigInfoResponse &ns3__getAtmosConfigInfoResponse);

	/// Web service operation 'getAtmosConfig' (returns error code or SOAP_OK)
	virtual	int getAtmosConfig(_ns3__getAtmosConfigRequest *ns3__getAtmosConfigRequest, _ns3__getAtmosConfigResponse &ns3__getAtmosConfigResponse) { return this->getAtmosConfig(NULL, NULL, ns3__getAtmosConfigRequest, ns3__getAtmosConfigResponse); }
	virtual	int getAtmosConfig(const char *endpoint, const char *soap_action, _ns3__getAtmosConfigRequest *ns3__getAtmosConfigRequest, _ns3__getAtmosConfigResponse &ns3__getAtmosConfigResponse);

	/// Web service operation 'setAtmosConfig' (returns error code or SOAP_OK)
	virtual	int setAtmosConfig(_ns3__setAtmosConfigRequest *ns3__setAtmosConfigRequest, _ns3__setAtmosConfigResponse &ns3__setAtmosConfigResponse) { return this->setAtmosConfig(NULL, NULL, ns3__setAtmosConfigRequest, ns3__setAtmosConfigResponse); }
	virtual	int setAtmosConfig(const char *endpoint, const char *soap_action, _ns3__setAtmosConfigRequest *ns3__setAtmosConfigRequest, _ns3__setAtmosConfigResponse &ns3__setAtmosConfigResponse);

	/// Web service operation 'getTestSignalOutput' (returns error code or SOAP_OK)
	virtual	int getTestSignalOutput(_ns3__getTestSignalOutputRequest *ns3__getTestSignalOutputRequest, _ns3__getTestSignalOutputResponse &ns3__getTestSignalOutputResponse) { return this->getTestSignalOutput(NULL, NULL, ns3__getTestSignalOutputRequest, ns3__getTestSignalOutputResponse); }
	virtual	int getTestSignalOutput(const char *endpoint, const char *soap_action, _ns3__getTestSignalOutputRequest *ns3__getTestSignalOutputRequest, _ns3__getTestSignalOutputResponse &ns3__getTestSignalOutputResponse);

	/// Web service operation 'setTestSignalOutput' (returns error code or SOAP_OK)
	virtual	int setTestSignalOutput(_ns3__setTestSignalOutputRequest *ns3__setTestSignalOutputRequest, _ns3__setTestSignalOutputResponse &ns3__setTestSignalOutputResponse) { return this->setTestSignalOutput(NULL, NULL, ns3__setTestSignalOutputRequest, ns3__setTestSignalOutputResponse); }
	virtual	int setTestSignalOutput(const char *endpoint, const char *soap_action, _ns3__setTestSignalOutputRequest *ns3__setTestSignalOutputRequest, _ns3__setTestSignalOutputResponse &ns3__setTestSignalOutputResponse);

	/// Web service operation 'getTestSignalMode' (returns error code or SOAP_OK)
	virtual	int getTestSignalMode(_ns3__getTestSignalModeRequest *ns3__getTestSignalModeRequest, _ns3__getTestSignalModeResponse &ns3__getTestSignalModeResponse) { return this->getTestSignalMode(NULL, NULL, ns3__getTestSignalModeRequest, ns3__getTestSignalModeResponse); }
	virtual	int getTestSignalMode(const char *endpoint, const char *soap_action, _ns3__getTestSignalModeRequest *ns3__getTestSignalModeRequest, _ns3__getTestSignalModeResponse &ns3__getTestSignalModeResponse);

	/// Web service operation 'setTestSignalMode' (returns error code or SOAP_OK)
	virtual	int setTestSignalMode(_ns3__setTestSignalModeRequest *ns3__setTestSignalModeRequest, _ns3__setTestSignalModeResponse &ns3__setTestSignalModeResponse) { return this->setTestSignalMode(NULL, NULL, ns3__setTestSignalModeRequest, ns3__setTestSignalModeResponse); }
	virtual	int setTestSignalMode(const char *endpoint, const char *soap_action, _ns3__setTestSignalModeRequest *ns3__setTestSignalModeRequest, _ns3__setTestSignalModeResponse &ns3__setTestSignalModeResponse);

	/// Web service operation 'isBassManagementEnabled' (returns error code or SOAP_OK)
	virtual	int isBassManagementEnabled(_ns3__isBassManagementEnabledRequest *ns3__isBassManagementEnabledRequest, _ns3__isBassManagementEnabledResponse &ns3__isBassManagementEnabledResponse) { return this->isBassManagementEnabled(NULL, NULL, ns3__isBassManagementEnabledRequest, ns3__isBassManagementEnabledResponse); }
	virtual	int isBassManagementEnabled(const char *endpoint, const char *soap_action, _ns3__isBassManagementEnabledRequest *ns3__isBassManagementEnabledRequest, _ns3__isBassManagementEnabledResponse &ns3__isBassManagementEnabledResponse);

	/// Web service operation 'enableBassManagement' (returns error code or SOAP_OK)
	virtual	int enableBassManagement(_ns3__enableBassManagementRequest *ns3__enableBassManagementRequest, _ns3__enableBassManagementResponse &ns3__enableBassManagementResponse) { return this->enableBassManagement(NULL, NULL, ns3__enableBassManagementRequest, ns3__enableBassManagementResponse); }
	virtual	int enableBassManagement(const char *endpoint, const char *soap_action, _ns3__enableBassManagementRequest *ns3__enableBassManagementRequest, _ns3__enableBassManagementResponse &ns3__enableBassManagementResponse);

	/// Web service operation 'isGlobalEqEnabled' (returns error code or SOAP_OK)
	virtual	int isGlobalEqEnabled(_ns3__isGlobalEqEnabledRequest *ns3__isGlobalEqEnabledRequest, _ns3__isGlobalEqEnabledResponse &ns3__isGlobalEqEnabledResponse) { return this->isGlobalEqEnabled(NULL, NULL, ns3__isGlobalEqEnabledRequest, ns3__isGlobalEqEnabledResponse); }
	virtual	int isGlobalEqEnabled(const char *endpoint, const char *soap_action, _ns3__isGlobalEqEnabledRequest *ns3__isGlobalEqEnabledRequest, _ns3__isGlobalEqEnabledResponse &ns3__isGlobalEqEnabledResponse);

	/// Web service operation 'enableGlobalEq' (returns error code or SOAP_OK)
	virtual	int enableGlobalEq(_ns3__enableGlobalEqRequest *ns3__enableGlobalEqRequest, _ns3__enableGlobalEqResponse &ns3__enableGlobalEqResponse) { return this->enableGlobalEq(NULL, NULL, ns3__enableGlobalEqRequest, ns3__enableGlobalEqResponse); }
	virtual	int enableGlobalEq(const char *endpoint, const char *soap_action, _ns3__enableGlobalEqRequest *ns3__enableGlobalEqRequest, _ns3__enableGlobalEqResponse &ns3__enableGlobalEqResponse);

	/// Web service operation 'getDeviceInfo' (returns error code or SOAP_OK)
	virtual	int getDeviceInfo(_ns3__getDeviceInfoRequest *ns3__getDeviceInfoRequest, _ns3__getDeviceInfoResponse &ns3__getDeviceInfoResponse) { return this->getDeviceInfo(NULL, NULL, ns3__getDeviceInfoRequest, ns3__getDeviceInfoResponse); }
	virtual	int getDeviceInfo(const char *endpoint, const char *soap_action, _ns3__getDeviceInfoRequest *ns3__getDeviceInfoRequest, _ns3__getDeviceInfoResponse &ns3__getDeviceInfoResponse);

	/// Web service operation 'getDeviceAlarms' (returns error code or SOAP_OK)
	virtual	int getDeviceAlarms(_ns3__getDeviceAlarmsRequest *ns3__getDeviceAlarmsRequest, _ns3__getDeviceAlarmsResponse &ns3__getDeviceAlarmsResponse) { return this->getDeviceAlarms(NULL, NULL, ns3__getDeviceAlarmsRequest, ns3__getDeviceAlarmsResponse); }
	virtual	int getDeviceAlarms(const char *endpoint, const char *soap_action, _ns3__getDeviceAlarmsRequest *ns3__getDeviceAlarmsRequest, _ns3__getDeviceAlarmsResponse &ns3__getDeviceAlarmsResponse);

	/// Web service operation 'getTimeZone' (returns error code or SOAP_OK)
	virtual	int getTimeZone(_ns3__getTimeZoneRequest *ns3__getTimeZoneRequest, _ns3__getTimeZoneResponse &ns3__getTimeZoneResponse) { return this->getTimeZone(NULL, NULL, ns3__getTimeZoneRequest, ns3__getTimeZoneResponse); }
	virtual	int getTimeZone(const char *endpoint, const char *soap_action, _ns3__getTimeZoneRequest *ns3__getTimeZoneRequest, _ns3__getTimeZoneResponse &ns3__getTimeZoneResponse);

	/// Web service operation 'setTimeZone' (returns error code or SOAP_OK)
	virtual	int setTimeZone(_ns3__setTimeZoneRequest *ns3__setTimeZoneRequest, _ns3__setTimeZoneResponse &ns3__setTimeZoneResponse) { return this->setTimeZone(NULL, NULL, ns3__setTimeZoneRequest, ns3__setTimeZoneResponse); }
	virtual	int setTimeZone(const char *endpoint, const char *soap_action, _ns3__setTimeZoneRequest *ns3__setTimeZoneRequest, _ns3__setTimeZoneResponse &ns3__setTimeZoneResponse);

	/// Web service operation 'isAutoEqModeEnabled' (returns error code or SOAP_OK)
	virtual	int isAutoEqModeEnabled(_ns3__isAutoEqModeEnabledRequest *ns3__isAutoEqModeEnabledRequest, _ns3__isAutoEqModeEnabledResponse &ns3__isAutoEqModeEnabledResponse) { return this->isAutoEqModeEnabled(NULL, NULL, ns3__isAutoEqModeEnabledRequest, ns3__isAutoEqModeEnabledResponse); }
	virtual	int isAutoEqModeEnabled(const char *endpoint, const char *soap_action, _ns3__isAutoEqModeEnabledRequest *ns3__isAutoEqModeEnabledRequest, _ns3__isAutoEqModeEnabledResponse &ns3__isAutoEqModeEnabledResponse);

	/// Web service operation 'enableAutoEqMode' (returns error code or SOAP_OK)
	virtual	int enableAutoEqMode(_ns3__enableAutoEqModeRequest *ns3__enableAutoEqModeRequest, _ns3__enableAutoEqModeResponse &ns3__enableAutoEqModeResponse) { return this->enableAutoEqMode(NULL, NULL, ns3__enableAutoEqModeRequest, ns3__enableAutoEqModeResponse); }
	virtual	int enableAutoEqMode(const char *endpoint, const char *soap_action, _ns3__enableAutoEqModeRequest *ns3__enableAutoEqModeRequest, _ns3__enableAutoEqModeResponse &ns3__enableAutoEqModeResponse);

	/// Web service operation 'performSystemUpgrade' (returns error code or SOAP_OK)
	virtual	int performSystemUpgrade(_ns3__performSystemUpgradeRequest *ns3__performSystemUpgradeRequest, _ns3__performSystemUpgradeResponse &ns3__performSystemUpgradeResponse) { return this->performSystemUpgrade(NULL, NULL, ns3__performSystemUpgradeRequest, ns3__performSystemUpgradeResponse); }
	virtual	int performSystemUpgrade(const char *endpoint, const char *soap_action, _ns3__performSystemUpgradeRequest *ns3__performSystemUpgradeRequest, _ns3__performSystemUpgradeResponse &ns3__performSystemUpgradeResponse);

	/// Web service operation 'listMacros' (returns error code or SOAP_OK)
	virtual	int listMacros_(_ns3__listMacrosRequest *ns3__listMacrosRequest, _ns3__listMacrosResponse &ns3__listMacrosResponse) { return this->listMacros_(NULL, NULL, ns3__listMacrosRequest, ns3__listMacrosResponse); }
	virtual	int listMacros_(const char *endpoint, const char *soap_action, _ns3__listMacrosRequest *ns3__listMacrosRequest, _ns3__listMacrosResponse &ns3__listMacrosResponse);

	/// Web service operation 'getCurrentMacro' (returns error code or SOAP_OK)
	virtual	int getCurrentMacro_(_ns3__getCurrentMacroRequest *ns3__getCurrentMacroRequest, _ns3__getCurrentMacroResponse &ns3__getCurrentMacroResponse) { return this->getCurrentMacro_(NULL, NULL, ns3__getCurrentMacroRequest, ns3__getCurrentMacroResponse); }
	virtual	int getCurrentMacro_(const char *endpoint, const char *soap_action, _ns3__getCurrentMacroRequest *ns3__getCurrentMacroRequest, _ns3__getCurrentMacroResponse &ns3__getCurrentMacroResponse);

	/// Web service operation 'setCurrentMacro' (returns error code or SOAP_OK)
	virtual	int setCurrentMacro_(_ns3__setCurrentMacroRequest *ns3__setCurrentMacroRequest, _ns3__setCurrentMacroResponse &ns3__setCurrentMacroResponse) { return this->setCurrentMacro_(NULL, NULL, ns3__setCurrentMacroRequest, ns3__setCurrentMacroResponse); }
	virtual	int setCurrentMacro_(const char *endpoint, const char *soap_action, _ns3__setCurrentMacroRequest *ns3__setCurrentMacroRequest, _ns3__setCurrentMacroResponse &ns3__setCurrentMacroResponse);

	/// Web service operation 'getGain' (returns error code or SOAP_OK)
	virtual	int getGain_(_ns3__getGainRequest *ns3__getGainRequest, _ns3__getGainResponse &ns3__getGainResponse) { return this->getGain_(NULL, NULL, ns3__getGainRequest, ns3__getGainResponse); }
	virtual	int getGain_(const char *endpoint, const char *soap_action, _ns3__getGainRequest *ns3__getGainRequest, _ns3__getGainResponse &ns3__getGainResponse);

	/// Web service operation 'setGain' (returns error code or SOAP_OK)
	virtual	int setGain_(_ns3__setGainRequest *ns3__setGainRequest, _ns3__setGainResponse &ns3__setGainResponse) { return this->setGain_(NULL, NULL, ns3__setGainRequest, ns3__setGainResponse); }
	virtual	int setGain_(const char *endpoint, const char *soap_action, _ns3__setGainRequest *ns3__setGainRequest, _ns3__setGainResponse &ns3__setGainResponse);

	/// Web service operation 'getMute' (returns error code or SOAP_OK)
	virtual	int getMute_(_ns3__getMuteRequest *ns3__getMuteRequest, _ns3__getMuteResponse &ns3__getMuteResponse) { return this->getMute_(NULL, NULL, ns3__getMuteRequest, ns3__getMuteResponse); }
	virtual	int getMute_(const char *endpoint, const char *soap_action, _ns3__getMuteRequest *ns3__getMuteRequest, _ns3__getMuteResponse &ns3__getMuteResponse);

	/// Web service operation 'setMute' (returns error code or SOAP_OK)
	virtual	int setMute_(_ns3__setMuteRequest *ns3__setMuteRequest, _ns3__setMuteResponse &ns3__setMuteResponse) { return this->setMute_(NULL, NULL, ns3__setMuteRequest, ns3__setMuteResponse); }
	virtual	int setMute_(const char *endpoint, const char *soap_action, _ns3__setMuteRequest *ns3__setMuteRequest, _ns3__setMuteResponse &ns3__setMuteResponse);

	/// Web service operation 'isAtmosContent' (returns error code or SOAP_OK)
	virtual	int isAtmosContent_(_ns3__isAtmosContentRequest *ns3__isAtmosContentRequest, _ns3__isAtmosContentResponse &ns3__isAtmosContentResponse) { return this->isAtmosContent_(NULL, NULL, ns3__isAtmosContentRequest, ns3__isAtmosContentResponse); }
	virtual	int isAtmosContent_(const char *endpoint, const char *soap_action, _ns3__isAtmosContentRequest *ns3__isAtmosContentRequest, _ns3__isAtmosContentResponse &ns3__isAtmosContentResponse);

	/// Web service operation 'getAudioStreamInfo' (returns error code or SOAP_OK)
	virtual	int getAudioStreamInfo_(_ns3__getAudioStreamInfoRequest *ns3__getAudioStreamInfoRequest, _ns3__getAudioStreamInfoResponse &ns3__getAudioStreamInfoResponse) { return this->getAudioStreamInfo_(NULL, NULL, ns3__getAudioStreamInfoRequest, ns3__getAudioStreamInfoResponse); }
	virtual	int getAudioStreamInfo_(const char *endpoint, const char *soap_action, _ns3__getAudioStreamInfoRequest *ns3__getAudioStreamInfoRequest, _ns3__getAudioStreamInfoResponse &ns3__getAudioStreamInfoResponse);

	/// Web service operation 'getAtmosConfigInfo' (returns error code or SOAP_OK)
	virtual	int getAtmosConfigInfo_(_ns3__getAtmosConfigInfoRequest *ns3__getAtmosConfigInfoRequest, _ns3__getAtmosConfigInfoResponse &ns3__getAtmosConfigInfoResponse) { return this->getAtmosConfigInfo_(NULL, NULL, ns3__getAtmosConfigInfoRequest, ns3__getAtmosConfigInfoResponse); }
	virtual	int getAtmosConfigInfo_(const char *endpoint, const char *soap_action, _ns3__getAtmosConfigInfoRequest *ns3__getAtmosConfigInfoRequest, _ns3__getAtmosConfigInfoResponse &ns3__getAtmosConfigInfoResponse);

	/// Web service operation 'getAtmosConfig' (returns error code or SOAP_OK)
	virtual	int getAtmosConfig_(_ns3__getAtmosConfigRequest *ns3__getAtmosConfigRequest, _ns3__getAtmosConfigResponse &ns3__getAtmosConfigResponse) { return this->getAtmosConfig_(NULL, NULL, ns3__getAtmosConfigRequest, ns3__getAtmosConfigResponse); }
	virtual	int getAtmosConfig_(const char *endpoint, const char *soap_action, _ns3__getAtmosConfigRequest *ns3__getAtmosConfigRequest, _ns3__getAtmosConfigResponse &ns3__getAtmosConfigResponse);

	/// Web service operation 'setAtmosConfig' (returns error code or SOAP_OK)
	virtual	int setAtmosConfig_(_ns3__setAtmosConfigRequest *ns3__setAtmosConfigRequest, _ns3__setAtmosConfigResponse &ns3__setAtmosConfigResponse) { return this->setAtmosConfig_(NULL, NULL, ns3__setAtmosConfigRequest, ns3__setAtmosConfigResponse); }
	virtual	int setAtmosConfig_(const char *endpoint, const char *soap_action, _ns3__setAtmosConfigRequest *ns3__setAtmosConfigRequest, _ns3__setAtmosConfigResponse &ns3__setAtmosConfigResponse);

	/// Web service operation 'getTestSignalOutput' (returns error code or SOAP_OK)
	virtual	int getTestSignalOutput_(_ns3__getTestSignalOutputRequest *ns3__getTestSignalOutputRequest, _ns3__getTestSignalOutputResponse &ns3__getTestSignalOutputResponse) { return this->getTestSignalOutput_(NULL, NULL, ns3__getTestSignalOutputRequest, ns3__getTestSignalOutputResponse); }
	virtual	int getTestSignalOutput_(const char *endpoint, const char *soap_action, _ns3__getTestSignalOutputRequest *ns3__getTestSignalOutputRequest, _ns3__getTestSignalOutputResponse &ns3__getTestSignalOutputResponse);

	/// Web service operation 'setTestSignalOutput' (returns error code or SOAP_OK)
	virtual	int setTestSignalOutput_(_ns3__setTestSignalOutputRequest *ns3__setTestSignalOutputRequest, _ns3__setTestSignalOutputResponse &ns3__setTestSignalOutputResponse) { return this->setTestSignalOutput_(NULL, NULL, ns3__setTestSignalOutputRequest, ns3__setTestSignalOutputResponse); }
	virtual	int setTestSignalOutput_(const char *endpoint, const char *soap_action, _ns3__setTestSignalOutputRequest *ns3__setTestSignalOutputRequest, _ns3__setTestSignalOutputResponse &ns3__setTestSignalOutputResponse);

	/// Web service operation 'getTestSignalMode' (returns error code or SOAP_OK)
	virtual	int getTestSignalMode_(_ns3__getTestSignalModeRequest *ns3__getTestSignalModeRequest, _ns3__getTestSignalModeResponse &ns3__getTestSignalModeResponse) { return this->getTestSignalMode_(NULL, NULL, ns3__getTestSignalModeRequest, ns3__getTestSignalModeResponse); }
	virtual	int getTestSignalMode_(const char *endpoint, const char *soap_action, _ns3__getTestSignalModeRequest *ns3__getTestSignalModeRequest, _ns3__getTestSignalModeResponse &ns3__getTestSignalModeResponse);

	/// Web service operation 'setTestSignalMode' (returns error code or SOAP_OK)
	virtual	int setTestSignalMode_(_ns3__setTestSignalModeRequest *ns3__setTestSignalModeRequest, _ns3__setTestSignalModeResponse &ns3__setTestSignalModeResponse) { return this->setTestSignalMode_(NULL, NULL, ns3__setTestSignalModeRequest, ns3__setTestSignalModeResponse); }
	virtual	int setTestSignalMode_(const char *endpoint, const char *soap_action, _ns3__setTestSignalModeRequest *ns3__setTestSignalModeRequest, _ns3__setTestSignalModeResponse &ns3__setTestSignalModeResponse);

	/// Web service operation 'isBassManagementEnabled' (returns error code or SOAP_OK)
	virtual	int isBassManagementEnabled_(_ns3__isBassManagementEnabledRequest *ns3__isBassManagementEnabledRequest, _ns3__isBassManagementEnabledResponse &ns3__isBassManagementEnabledResponse) { return this->isBassManagementEnabled_(NULL, NULL, ns3__isBassManagementEnabledRequest, ns3__isBassManagementEnabledResponse); }
	virtual	int isBassManagementEnabled_(const char *endpoint, const char *soap_action, _ns3__isBassManagementEnabledRequest *ns3__isBassManagementEnabledRequest, _ns3__isBassManagementEnabledResponse &ns3__isBassManagementEnabledResponse);

	/// Web service operation 'enableBassManagement' (returns error code or SOAP_OK)
	virtual	int enableBassManagement_(_ns3__enableBassManagementRequest *ns3__enableBassManagementRequest, _ns3__enableBassManagementResponse &ns3__enableBassManagementResponse) { return this->enableBassManagement_(NULL, NULL, ns3__enableBassManagementRequest, ns3__enableBassManagementResponse); }
	virtual	int enableBassManagement_(const char *endpoint, const char *soap_action, _ns3__enableBassManagementRequest *ns3__enableBassManagementRequest, _ns3__enableBassManagementResponse &ns3__enableBassManagementResponse);

	/// Web service operation 'isGlobalEqEnabled' (returns error code or SOAP_OK)
	virtual	int isGlobalEqEnabled_(_ns3__isGlobalEqEnabledRequest *ns3__isGlobalEqEnabledRequest, _ns3__isGlobalEqEnabledResponse &ns3__isGlobalEqEnabledResponse) { return this->isGlobalEqEnabled_(NULL, NULL, ns3__isGlobalEqEnabledRequest, ns3__isGlobalEqEnabledResponse); }
	virtual	int isGlobalEqEnabled_(const char *endpoint, const char *soap_action, _ns3__isGlobalEqEnabledRequest *ns3__isGlobalEqEnabledRequest, _ns3__isGlobalEqEnabledResponse &ns3__isGlobalEqEnabledResponse);

	/// Web service operation 'enableGlobalEq' (returns error code or SOAP_OK)
	virtual	int enableGlobalEq_(_ns3__enableGlobalEqRequest *ns3__enableGlobalEqRequest, _ns3__enableGlobalEqResponse &ns3__enableGlobalEqResponse) { return this->enableGlobalEq_(NULL, NULL, ns3__enableGlobalEqRequest, ns3__enableGlobalEqResponse); }
	virtual	int enableGlobalEq_(const char *endpoint, const char *soap_action, _ns3__enableGlobalEqRequest *ns3__enableGlobalEqRequest, _ns3__enableGlobalEqResponse &ns3__enableGlobalEqResponse);

	/// Web service operation 'getDeviceInfo' (returns error code or SOAP_OK)
	virtual	int getDeviceInfo_(_ns3__getDeviceInfoRequest *ns3__getDeviceInfoRequest, _ns3__getDeviceInfoResponse &ns3__getDeviceInfoResponse) { return this->getDeviceInfo_(NULL, NULL, ns3__getDeviceInfoRequest, ns3__getDeviceInfoResponse); }
	virtual	int getDeviceInfo_(const char *endpoint, const char *soap_action, _ns3__getDeviceInfoRequest *ns3__getDeviceInfoRequest, _ns3__getDeviceInfoResponse &ns3__getDeviceInfoResponse);

	/// Web service operation 'getDeviceAlarms' (returns error code or SOAP_OK)
	virtual	int getDeviceAlarms_(_ns3__getDeviceAlarmsRequest *ns3__getDeviceAlarmsRequest, _ns3__getDeviceAlarmsResponse &ns3__getDeviceAlarmsResponse) { return this->getDeviceAlarms_(NULL, NULL, ns3__getDeviceAlarmsRequest, ns3__getDeviceAlarmsResponse); }
	virtual	int getDeviceAlarms_(const char *endpoint, const char *soap_action, _ns3__getDeviceAlarmsRequest *ns3__getDeviceAlarmsRequest, _ns3__getDeviceAlarmsResponse &ns3__getDeviceAlarmsResponse);

	/// Web service operation 'getTimeZone' (returns error code or SOAP_OK)
	virtual	int getTimeZone_(_ns3__getTimeZoneRequest *ns3__getTimeZoneRequest, _ns3__getTimeZoneResponse &ns3__getTimeZoneResponse) { return this->getTimeZone_(NULL, NULL, ns3__getTimeZoneRequest, ns3__getTimeZoneResponse); }
	virtual	int getTimeZone_(const char *endpoint, const char *soap_action, _ns3__getTimeZoneRequest *ns3__getTimeZoneRequest, _ns3__getTimeZoneResponse &ns3__getTimeZoneResponse);

	/// Web service operation 'setTimeZone' (returns error code or SOAP_OK)
	virtual	int setTimeZone_(_ns3__setTimeZoneRequest *ns3__setTimeZoneRequest, _ns3__setTimeZoneResponse &ns3__setTimeZoneResponse) { return this->setTimeZone_(NULL, NULL, ns3__setTimeZoneRequest, ns3__setTimeZoneResponse); }
	virtual	int setTimeZone_(const char *endpoint, const char *soap_action, _ns3__setTimeZoneRequest *ns3__setTimeZoneRequest, _ns3__setTimeZoneResponse &ns3__setTimeZoneResponse);

	/// Web service operation 'isAutoEqModeEnabled' (returns error code or SOAP_OK)
	virtual	int isAutoEqModeEnabled_(_ns3__isAutoEqModeEnabledRequest *ns3__isAutoEqModeEnabledRequest, _ns3__isAutoEqModeEnabledResponse &ns3__isAutoEqModeEnabledResponse) { return this->isAutoEqModeEnabled_(NULL, NULL, ns3__isAutoEqModeEnabledRequest, ns3__isAutoEqModeEnabledResponse); }
	virtual	int isAutoEqModeEnabled_(const char *endpoint, const char *soap_action, _ns3__isAutoEqModeEnabledRequest *ns3__isAutoEqModeEnabledRequest, _ns3__isAutoEqModeEnabledResponse &ns3__isAutoEqModeEnabledResponse);

	/// Web service operation 'enableAutoEqMode' (returns error code or SOAP_OK)
	virtual	int enableAutoEqMode_(_ns3__enableAutoEqModeRequest *ns3__enableAutoEqModeRequest, _ns3__enableAutoEqModeResponse &ns3__enableAutoEqModeResponse) { return this->enableAutoEqMode_(NULL, NULL, ns3__enableAutoEqModeRequest, ns3__enableAutoEqModeResponse); }
	virtual	int enableAutoEqMode_(const char *endpoint, const char *soap_action, _ns3__enableAutoEqModeRequest *ns3__enableAutoEqModeRequest, _ns3__enableAutoEqModeResponse &ns3__enableAutoEqModeResponse);

	/// Web service operation 'performSystemUpgrade' (returns error code or SOAP_OK)
	virtual	int performSystemUpgrade_(_ns3__performSystemUpgradeRequest *ns3__performSystemUpgradeRequest, _ns3__performSystemUpgradeResponse &ns3__performSystemUpgradeResponse) { return this->performSystemUpgrade_(NULL, NULL, ns3__performSystemUpgradeRequest, ns3__performSystemUpgradeResponse); }
	virtual	int performSystemUpgrade_(const char *endpoint, const char *soap_action, _ns3__performSystemUpgradeRequest *ns3__performSystemUpgradeRequest, _ns3__performSystemUpgradeResponse &ns3__performSystemUpgradeResponse);

	/// Web service operation 'getCertificate' (returns error code or SOAP_OK)
	virtual	int getCertificate(_ns4__getCertificateRequest *ns4__getCertificateRequest, _ns4__getCertificateResponse &ns4__getCertificateResponse) { return this->getCertificate(NULL, NULL, ns4__getCertificateRequest, ns4__getCertificateResponse); }
	virtual	int getCertificate(const char *endpoint, const char *soap_action, _ns4__getCertificateRequest *ns4__getCertificateRequest, _ns4__getCertificateResponse &ns4__getCertificateResponse);

	/// Web service operation 'getSystemVersions' (returns error code or SOAP_OK)
	virtual	int getSystemVersions(_ns4__getSystemVersionsRequest *ns4__getSystemVersionsRequest, _ns4__getSystemVersionsResponse &ns4__getSystemVersionsResponse) { return this->getSystemVersions(NULL, NULL, ns4__getSystemVersionsRequest, ns4__getSystemVersionsResponse); }
	virtual	int getSystemVersions(const char *endpoint, const char *soap_action, _ns4__getSystemVersionsRequest *ns4__getSystemVersionsRequest, _ns4__getSystemVersionsResponse &ns4__getSystemVersionsResponse);

	/// Web service operation 'setWayParams' (returns error code or SOAP_OK)
	virtual	int setWayParams(_ns4__setWayParamsRequest *ns4__setWayParamsRequest, _ns4__setWayParamsResponse &ns4__setWayParamsResponse) { return this->setWayParams(NULL, NULL, ns4__setWayParamsRequest, ns4__setWayParamsResponse); }
	virtual	int setWayParams(const char *endpoint, const char *soap_action, _ns4__setWayParamsRequest *ns4__setWayParamsRequest, _ns4__setWayParamsResponse &ns4__setWayParamsResponse);

	/// Web service operation 'getWayParams' (returns error code or SOAP_OK)
	virtual	int getWayParams(_ns4__getWayParamsRequest *ns4__getWayParamsRequest, _ns4__getWayParamsResponse &ns4__getWayParamsResponse) { return this->getWayParams(NULL, NULL, ns4__getWayParamsRequest, ns4__getWayParamsResponse); }
	virtual	int getWayParams(const char *endpoint, const char *soap_action, _ns4__getWayParamsRequest *ns4__getWayParamsRequest, _ns4__getWayParamsResponse &ns4__getWayParamsResponse);

	/// Web service operation 'getWayFilters' (returns error code or SOAP_OK)
	virtual	int getWayFilters(_ns4__getWayFiltersRequest *ns4__getWayFiltersRequest, _ns4__getWayFiltersResponse &ns4__getWayFiltersResponse) { return this->getWayFilters(NULL, NULL, ns4__getWayFiltersRequest, ns4__getWayFiltersResponse); }
	virtual	int getWayFilters(const char *endpoint, const char *soap_action, _ns4__getWayFiltersRequest *ns4__getWayFiltersRequest, _ns4__getWayFiltersResponse &ns4__getWayFiltersResponse);

	/// Web service operation 'setWayFilter' (returns error code or SOAP_OK)
	virtual	int setWayFilter(_ns4__setWayFilterRequest *ns4__setWayFilterRequest, _ns4__setWayFilterResponse &ns4__setWayFilterResponse) { return this->setWayFilter(NULL, NULL, ns4__setWayFilterRequest, ns4__setWayFilterResponse); }
	virtual	int setWayFilter(const char *endpoint, const char *soap_action, _ns4__setWayFilterRequest *ns4__setWayFilterRequest, _ns4__setWayFilterResponse &ns4__setWayFilterResponse);

	/// Web service operation 'deleteWayFilter' (returns error code or SOAP_OK)
	virtual	int deleteWayFilter(_ns4__deleteWayFilterRequest *ns4__deleteWayFilterRequest, _ns4__deleteWayFilterResponse &ns4__deleteWayFilterResponse) { return this->deleteWayFilter(NULL, NULL, ns4__deleteWayFilterRequest, ns4__deleteWayFilterResponse); }
	virtual	int deleteWayFilter(const char *endpoint, const char *soap_action, _ns4__deleteWayFilterRequest *ns4__deleteWayFilterRequest, _ns4__deleteWayFilterResponse &ns4__deleteWayFilterResponse);
};
#endif
